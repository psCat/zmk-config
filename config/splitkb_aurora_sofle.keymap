/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keymap_swedish.h"

// layers

#define DVORAK 0
#define SYMBOLS_A5 1
#define NUM 2
#define FUNC 3
#define MEDIA 4

// #define QWERTY


/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |
            bindings = <
&kp ESC   &kp N1      &kp N2        &kp N3      &kp N4   &kp N5                              &kp N6          &kp N7   &kp N8    &kp N9   &kp N0   &kp GRAVE
&kp TAB   &kp SE_AUOO &kp SE_AUEE   &kp SE_OUEE &kp P    &kp Y                               &kp F           &kp G    &kp C     &kp R    &kp L    &kp MINUS
&kp LCTRL &kp A       &kp O         &kp E       &kp U    &kp I                               &kp D           &kp H    &kp T     &kp N    &kp S    &kp SQT
&kp LSHFT &kp COMMA   &kp Q         &kp J       &kp K    &kp X     &kp LBKT   &kp RBKT       &kp B           &kp M    &kp W     &kp V    &kp Z    &kp RSHFT
                      &kp LCTRL     &kp LALT    &kp LGUI &mo FUNC  &kp SPACE  &kp RET        &mo SYMBOLS_A5  &kp BSPC &kp RGUI  &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        symbol_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//               |     |      |      |      |        |  |       |      |       |       |      |
// 
             bindings = <
&bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                  &none           &ext_power EP_ON    &ext_power EP_OFF &ext_power EP_TOG &trans          &none
&trans      &kp SE_LBRC     &kp SE_RBRC   &kp SE_LBKT  &kp SE_RBKT  &kp SE_DOLLAR                 &none           &kp SE_QMARK        &kp SE_AMPS       &kp SE_LT         &kp SE_GT       &kp SE_TILDE2
&trans      &kp SE_SEMI     &kp SE_SLASH  &kp SE_LPAR  &kp SE_RPAR  &kp SE_PIPE                   &kp SE_STAR     &kp SE_CARET        &kp SE_HASH       &kp SE_DQT        &kp SE_MINUS    &trans
&trans      &kp COLON       &kp SE_EQUAL  &kp SE_AT    &kp SE_EXCL  &kp SE_BSLH  &trans   &trans  &kp SE_PRCNT    &kp SE_GRAVE        &kp SE_PLUS       &kp SE_MINUS      &trans          &trans
                            &trans        &trans       &trans       &trans       &trans   &trans  &trans          &trans              &trans            &trans
             >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
// Find place for these:
// &kp TILDE

        function_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                 &trans &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};



// Old layers:
//         lower_layer {
// // ------------------------------------------------------------------------------------------------------------
// // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
// //               |     |      |      |      |        |  |       |      |       |       |      |
// 
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
//         };
// 
//         raise_layer {
// // ------------------------------------------------------------------------------------------------------------
// // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
// //               |     |      |      |      |        |  |       |      |       |       |      |
//             bindings = <
// &trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
// &kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
// &kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
// &kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
//                  &trans &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans    &trans
//             >;
// 
//             sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
//         };
// 
